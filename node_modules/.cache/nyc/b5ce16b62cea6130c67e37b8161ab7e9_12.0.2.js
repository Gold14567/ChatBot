var cov_1qdaoz7r11=function(){var path="C:\\Users\\techb\\Documents\\Coding\\Discord Bots\\ChatBot - dev\\start_scripts\\loginit.js",hash="c039be0e6c8e80241dbccc3ad722085e5cdcbb49",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\techb\\Documents\\Coding\\Discord Bots\\ChatBot - dev\\start_scripts\\loginit.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:13},end:{line:2,column:28}},"2":{start:{line:3,column:11},end:{line:3,column:24}},"3":{start:{line:4,column:15},end:{line:4,column:68}},"4":{start:{line:5,column:14},end:{line:5,column:19}},"5":{start:{line:8,column:0},end:{line:21,column:3}},"6":{start:{line:9,column:2},end:{line:20,column:3}},"7":{start:{line:10,column:18},end:{line:10,column:22}},"8":{start:{line:11,column:4},end:{line:14,column:7}},"9":{start:{line:12,column:6},end:{line:13,column:9}},"10":{start:{line:15,column:9},end:{line:20,column:3}},"11":{start:{line:17,column:4},end:{line:17,column:39}},"12":{start:{line:19,column:4},end:{line:19,column:48}},"13":{start:{line:23,column:0},end:{line:58,column:1}},"14":{start:{line:25,column:4},end:{line:38,column:7}},"15":{start:{line:43,column:4},end:{line:56,column:7}},"16":{start:{line:75,column:0},end:{line:77,column:2}},"17":{start:{line:81,column:0},end:{line:81,column:12}},"18":{start:{line:83,column:0},end:{line:86,column:1}},"19":{start:{line:84,column:17},end:{line:84,column:46}},"20":{start:{line:85,column:2},end:{line:85,column:38}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:26},end:{line:8,column:27}},loc:{start:{line:8,column:47},end:{line:21,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:11,column:53},end:{line:11,column:54}},loc:{start:{line:11,column:68},end:{line:14,column:5}},line:11},"2":{name:"(anonymous_2)",decl:{start:{line:12,column:32},end:{line:12,column:33}},loc:{start:{line:12,column:54},end:{line:13,column:7}},line:12},"3":{name:"prologtest",decl:{start:{line:24,column:11},end:{line:24,column:21}},loc:{start:{line:24,column:24},end:{line:39,column:3}},line:24},"4":{name:"prologtest",decl:{start:{line:42,column:11},end:{line:42,column:21}},loc:{start:{line:42,column:24},end:{line:57,column:3}},line:42}},branchMap:{"0":{loc:{start:{line:9,column:2},end:{line:20,column:3}},type:"if",locations:[{start:{line:9,column:2},end:{line:20,column:3}},{start:{line:9,column:2},end:{line:20,column:3}}],line:9},"1":{loc:{start:{line:15,column:9},end:{line:20,column:3}},type:"if",locations:[{start:{line:15,column:9},end:{line:20,column:3}},{start:{line:15,column:9},end:{line:20,column:3}}],line:15},"2":{loc:{start:{line:23,column:0},end:{line:58,column:1}},type:"if",locations:[{start:{line:23,column:0},end:{line:58,column:1}},{start:{line:23,column:0},end:{line:58,column:1}}],line:23},"3":{loc:{start:{line:83,column:0},end:{line:86,column:1}},type:"if",locations:[{start:{line:83,column:0},end:{line:86,column:1}},{start:{line:83,column:0},end:{line:86,column:1}}],line:83}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const winston=(cov_1qdaoz7r11.s[0]++,require('winston'));const toml=(cov_1qdaoz7r11.s[1]++,require('toml'));const fs=(cov_1qdaoz7r11.s[2]++,require('fs'));const config=(cov_1qdaoz7r11.s[3]++,toml.parse(fs.readFileSync('./config.toml','utf-8')));var newfile=(cov_1qdaoz7r11.s[4]++,false);//Rotates Log File
cov_1qdaoz7r11.s[5]++;fs.stat('./logs/dev.log',function(err,stat){cov_1qdaoz7r11.f[0]++;cov_1qdaoz7r11.s[6]++;if(err==null){cov_1qdaoz7r11.b[0][0]++;var newfile=(cov_1qdaoz7r11.s[7]++,true);cov_1qdaoz7r11.s[8]++;fs.rename('./logs/dev.log','./logs/olddev.log',function(err){cov_1qdaoz7r11.f[1]++;cov_1qdaoz7r11.s[9]++;fs.stat('./logs/dev.log',function(err,stats){cov_1qdaoz7r11.f[2]++;});});}else{cov_1qdaoz7r11.b[0][1]++;cov_1qdaoz7r11.s[10]++;if(err.code=='ENOENT'){cov_1qdaoz7r11.b[1][0]++;cov_1qdaoz7r11.s[11]++;// file does not exist
console.log('Creating new dev.log');}else{cov_1qdaoz7r11.b[1][1]++;cov_1qdaoz7r11.s[12]++;console.log('Some other error: ',err.code);}}});cov_1qdaoz7r11.s[13]++;if(config.Logging.debug){cov_1qdaoz7r11.b[2][0]++;function prologtest(){cov_1qdaoz7r11.f[3]++;cov_1qdaoz7r11.s[14]++;winston.loggers.add('prolog',{console:{level:'silly',colorize:true,label:'MAIN',json:false},file:{filename:'./logs/dev.log',level:'silly',json:false,timestamp:true}});}}else{cov_1qdaoz7r11.b[2][1]++;//Define logger Prolog
function prologtest(){cov_1qdaoz7r11.f[4]++;cov_1qdaoz7r11.s[15]++;winston.loggers.add('prolog',{console:{level:'warn',colorize:true,label:'MAIN',json:false},file:{filename:'./logs/dev.log',level:'silly',json:false,timestamp:true}});}}/*
//Define Logger DevLog
function devlogtest() {
  winston.loggers.add('devlog', {
    console: {
      level: 'silly',
      colorize: 'true',
      label: 'DEBUG'
    }
  })
}
//const devlog = winston.loggers.get('devlog');
//devlog.error('Hi')
*/cov_1qdaoz7r11.s[16]++;module.exports={prologtest:prologtest};cov_1qdaoz7r11.s[17]++;prologtest();cov_1qdaoz7r11.s[18]++;if(newfile=true){cov_1qdaoz7r11.b[3][0]++;const prolog=(cov_1qdaoz7r11.s[19]++,winston.loggers.get('prolog'));cov_1qdaoz7r11.s[20]++;prolog.info('Hello new log file :)');}else{cov_1qdaoz7r11.b[3][1]++;}